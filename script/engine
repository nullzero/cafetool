#!/usr/bin/ruby

require 'fileutils'
require File.dirname(__FILE__) + '/graderutils.rb'

cafetool_dir, path_config = GraderUtils.initial(__FILE__)
cafe_dir = path_config['cafegrader:'] + '/judge'
source_dir = path_config['workspace:']
current_dir = '/tmp/cafetool'
FileUtils.mkdir_p(current_dir)
FileUtils.cd(current_dir)
source_name = "#{ARGV[0]}"
source_path = "#{source_dir}/#{source_name}"
abort('Not running in workspace') if !FileTest.exist?(source_path)
problem_name = GraderUtils.find_info(/^TASK:/, source_path).downcase
source_ext = GraderUtils.find_info(/^LANG:/, source_path).downcase
language_list = ['c', 'c++', 'pas']
abort('Wrong LANG !') if !language_list.include?(source_ext)
problem_home = "#{cafe_dir}/ev/#{problem_name}"
abort('Testdata not found') if !FileTest.exist?(problem_home)
script_dir = problem_home + '/script'
std_script_dir = cafe_dir + '/scripts/std-script'
scripts = Dir[std_script_dir + '/*']
copied = []
scripts.each do |s|
	fname = File.basename(s)
	next if FileTest.directory?(s)
    if !FileTest.exist?("#{script_dir}/#{fname}")
    	copied << fname
		FileUtils.cp(s, script_dir)
	end
end
ENV['PROBLEM_HOME'] = problem_home
`#{script_dir}/judge #{source_ext} #{source_path} > /dev/null 2>&1`
copied.each do |s|
	FileUtils.rm("#{problem_home}/script/#{s}")
end
puts GraderUtils.readfile(current_dir + '/test-result/compiler_message')
result_path = current_dir + '/test-result/comment'
if FileTest.exist?(result_path)
	result = GraderUtils.readfile(result_path).lines.to_a[0]
	puts result
	if (result =~ /^P*$/)
		FileUtils.mkdir_p(source_dir + '/complete')
		FileUtils.mv(source_path,source_dir + '/complete')
		puts "PASSED : source code has been moved to 'complete' directory."
	end
else
	puts 'Compilation error'
end
FileUtils.remove_dir(current_dir + '/test-result')
FileUtils.remove_dir(current_dir + '/sandbox')
